#!/bin/bash

#set -e

ROOT_DIR=$PWD
TOOLS_DIR=${ROOT_DIR}/pctools/linux
PACK_CHIP="sun6i"
PACK_PLATFORM="linux"
PACK_BOARD="evb"
PACK_BOOT="nand"
PACK_FUNC="android"
PACK_DEBUG="uart0"
PACK_SIG="none"
PACK_MODE="normal"

export PATH=${TOOLS_DIR}/mod_update:${TOOLS_DIR}/eDragonEx:${TOOLS_DIR}/fsbuild200:${TOOLS_DIR}/android:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${TOOLS_DIR}/libs

show_help()
{
printf "
NAME
    pack-new - The pack tools for linux firmware

SYNOPSIS
    pack [-h] [-c chip] [-p platform] [-b board] [-d debug] [-s sig]

OPTIONS
    -h                  Display help message
    -c [chip_type]      Chip type, e.g. sun3i, sun4i, sun5i,...
    -p [platform_type]  Platform type, e.g. linux, crane,...
    -b [board_type]     Board type, e.g. evb1.1, evb1.2, ...
    -B [boot_type]      Boot type, e.g. nand, sdcard, ...
    -d [debug_mode]     Debug modes, e.g. uart0(default), card0
    -s [sig_mode]       Sig modes, e.g. none(default), sig
"

}

while getopts hc:p:b:B:d:f:s:m: OPTION
do
    case $OPTION in
    h) show_help
    exit 0
    ;;
    c) PACK_CHIP=$OPTARG
    ;;
    b) PACK_BOARD=$OPTARG
    ;;
    p) PACK_PLATFORM=$OPTARG
    ;;
    B) PACK_BOOT=$OPTARG
    ;;
	d) PACK_DEBUG=$OPTARG
	;;
	f) PACK_FUNC=$OPTARG
	;;
	s) PACK_SIG=$OPTARG
	;;
	m) PACK_MODE=$OPTARG
	;;
    *) show_help
    exit 0
    ;;
esac
done

do_prepare()
 {
    if [ -z "$PACK_CHIP" -o -z "$PACK_BOARD" -o -z "$PACK_PLATFORM" -o  ! -d "$LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/" ]; then
        printf "Invalid Parameter\n"
        show_help
        exit 1
    fi

#FIXME: do some basic check

    if [ -d out ]; then
        rm -rf out/
    fi
    mkdir out/
}

do_clean()
{
    #rm -rf efex boot wboot
    #rm -rf out/*.fex out/*.bin
	printf "pack finish\n"
}


do_pack_crane()
{
    if [ -z "$LICHEE_OUT" ]; then
        echo "please specify LICHEE_OUT env"
        exit 1
    fi

    if [ -z "$CRANE_IMAGE_OUT" ]; then
        echo "please specify CRANE_IMAGE_OUT env"
        exit 1
    fi
	
	if [ ! -f "$LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/sys_config.fex" -o \
		 ! -f "$LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/sys_partition.fex" ]; then
		echo "please put sys_config into in your device tree configs directory"
		exit 1
	fi
	
	cp chips/sun6i/configs/android/default/*.fex out/ 
    cp chips/sun6i/configs/android/default/*.cfg out/
    
    cp $LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/*.fex out/ 
    cp $LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/*.cfg out/

	if [ $PACK_DEBUG = card0 ]; then
	    cp $TOOLS_DIR/awk_debug_card0 out/awk_debug_card0
	    TX=`awk  '$0~"a31"{print $2}' pctools/linux/card_debug_pin`
	    RX=`awk  '$0~"a31"{print $3}' pctools/linux/card_debug_pin`
	    MS=`awk  '$0~"a31"{print $4}' pctools/linux/card_debug_pin`
	    CK=`awk  '$0~"a31"{print $5}' pctools/linux/card_debug_pin`
	    DO=`awk  '$0~"a31"{print $6}' pctools/linux/card_debug_pin`
	    DI=`awk  '$0~"a31"{print $7}' pctools/linux/card_debug_pin`

	    sed -i s'/jtag_ms = /jtag_ms = '$MS'/g' out/awk_debug_card0
	    sed -i s'/jtag_ck = /jtag_ck = '$CK'/g' out/awk_debug_card0
	    sed -i s'/jtag_do = /jtag_do = '$DO'/g' out/awk_debug_card0
	    sed -i s'/jtag_di = /jtag_di = '$DI'/g' out/awk_debug_card0
	    sed -i s'/uart_debug_tx =/uart_debug_tx = '$TX'/g' out/awk_debug_card0
	    sed -i s'/uart_debug_rx =/uart_debug_rx = '$RX'/g' out/awk_debug_card0
	    sed -i s'/uart_tx =/uart_tx = '$TX'/g' out/awk_debug_card0
	    sed -i s'/uart_rx =/uart_rx = '$RX'/g' out/awk_debug_card0
	    awk -f out/awk_debug_card0 out/sys_config.fex > out/a.fex
	    rm out/sys_config.fex
	    mv out/a.fex out/sys_config.fex
	    echo "uart -> card0 !!!"
	fi

    cp -rf chips/$PACK_CHIP/tools/split_xxxx.fex  chips/$PACK_CHIP/boot-resource/boot-resource chips/$PACK_CHIP/boot-resource/boot-resource.ini \
        out/

    #overlay bootlogo file
    if [ -e "$LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/bootlogo.bmp" ]; then
    echo "Overlaying default bootlogo"
	cp $LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/bootlogo.bmp out/boot-resource/
    fi

	cp -rf chips/$PACK_CHIP/tools/usbtool.fex chips/$PACK_CHIP/tools/cardtool.fex chips/$PACK_CHIP/tools/cardscript.fex \
        out/
	cp -rf chips/$PACK_CHIP/tools/aultls32.fex chips/$PACK_CHIP/tools/aultools.fex \
        out/
    cp chips/$PACK_CHIP/bin/boot0_nand_$PACK_CHIP.bin   out/boot0_nand.fex
    cp chips/$PACK_CHIP/bin/boot0_sdcard_$PACK_CHIP.bin out/boot0_sdcard.fex

    cp chips/$PACK_CHIP/bin/fes1_$PACK_CHIP.bin 	       out/fes1.fex
    #overlay uboot
    if [ -e "$LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/u-boot.fex" ]; then
    echo "Overlaying default uboot"
	cp $LICHEE_OUT/device/softwinner/$PACK_BOARD/configs/u-boot.fex out/u-boot.fex
    else
	cp chips/$PACK_CHIP/bin/u-boot-$PACK_CHIP.bin 	   out/u-boot.fex
	fi
	
    cd out/


    sed -i 's/\\boot-resource/\/boot-resource/g' boot-resource.ini
    sed -i 's/\\\\/\//g' image.cfg
    sed -i 's/imagename/;imagename/g' image.cfg

    if [ $PACK_DEBUG = card0 ]; then
    	if [ ${PACK_SIG} = "sig" ]; then
	    	IMG_NAME="${PACK_CHIP}_${PACK_PLATFORM}_${PACK_BOARD}_${PACK_DEBUG}_${PACK_SIG}_$(date +"%F").img"
	    else
	    	IMG_NAME="${PACK_CHIP}_${PACK_PLATFORM}_${PACK_BOARD}_${PACK_DEBUG}_$(date +"%F").img"
	    fi
    else
    	if [ ${PACK_SIG} = "sig" ]; then
        	IMG_NAME="${PACK_CHIP}_${PACK_PLATFORM}_${PACK_BOARD}_${PACK_SIG}_$(date +"%F").img"
        else
        	IMG_NAME="${PACK_CHIP}_${PACK_PLATFORM}_${PACK_BOARD}_$(date +"%F").img"
        fi
    fi

    echo "imagename = $IMG_NAME" >> image.cfg
    echo "" >> image.cfg


	busybox unix2dos sys_config.fex
	busybox unix2dos sys_partition.fex
	script sys_config.fex
	script sys_partition.fex

	cp sys_config.bin  config.fex

	update_boot0 boot0_nand.fex   sys_config.bin NAND
	update_boot0 boot0_sdcard.fex sys_config.bin SDMMC_CARD

	update_uboot u-boot.fex  sys_config.bin

	update_fes1  fes1.fex  sys_config.bin

    update_mbr sys_partition.bin  4

    fsbuild boot-resource.ini split_xxxx.fex

    # get bootloader.fex
    mv boot-resource.fex bootloader.fex

    # get env.fex
	u_boot_env_gen env.cfg env.fex

    # get other images from android build
    ln -s $CRANE_IMAGE_OUT/boot.img boot.fex
    ln -s $CRANE_IMAGE_OUT/system.img system.fex
    ln -s $CRANE_IMAGE_OUT/recovery.img recovery.fex

	if [ ${PACK_SIG} = "sig" ]; then

		echo "signature"

		signature sunxi_mbr.fex dlinfo.fex

		echo "signature over"
	else
		echo "normal"
	fi

    dragon image.cfg sys_partition.fex

    if [ -e ${IMG_NAME} ]; then
        mv ${IMG_NAME} ${LICHEE_OUT}/${IMG_NAME}
        echo '---------image is at-------------'
        echo -e '\033[0;31;1m'
        echo ${LICHEE_OUT}/${IMG_NAME}
        echo -e '\033[0m'
    fi

    cd - 1>/dev/null
}

do_prepare
do_pack_crane
do_clean
